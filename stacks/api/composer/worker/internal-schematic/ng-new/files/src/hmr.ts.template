import { NgModuleRef, ApplicationRef } from '@angular/core';

// Built for spica.
function createNewHosts(cmps: any) {
	const components = Array.prototype.map.call(cmps, (componentNode: any) => {
		const newNode = document.createElement(componentNode.tagName);
		const parentNode = componentNode.parentNode;
		const currentDisplay = newNode.style.display;

		newNode.style.display = 'none';
		parentNode.insertBefore(newNode, componentNode);

		function removeOldHost() {
			newNode.style.display = currentDisplay;
			try {
				parentNode.removeChild(componentNode);
			} catch (e) {}
		}

		return removeOldHost;
	});
	return () => components.forEach((removeOldHost: any) => removeOldHost());
}

export const hmrBootstrap = (module: any, bootstrap: () => Promise<NgModuleRef<any>>) => {
	module.hot.accept();
	bootstrap().then((mod) => (window['ngRef'] = mod));
	module.hot.dispose(() => {
		const appRef: ApplicationRef = window['ngRef'].injector.get(ApplicationRef);
		const elements = appRef.components.map((c) => c.location.nativeElement);
		const makeVisible = createNewHosts(elements);
		window['ngRef'].destroy();
		makeVisible();
	});
};
